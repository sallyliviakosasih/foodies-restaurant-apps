{"version":3,"file":"app~7bd12dde.bundle.js","mappings":";4iEAAMA,EAAAA,SAAAA,yiBACF,WACIC,KAAKC,QACR,yBAED,SAAeC,GACXF,KAAKG,YAAcD,EACnBF,KAAKC,QACR,gCAED,SAAsBC,GAClBF,KAAKI,mBAAqBF,EAC1BF,KAAKC,QACR,oBAED,WACI,OAAOD,KAAKK,cAAc,iBAAiBC,KAC9C,uBAED,WACIN,KAAKO,UAAL,wPAMAP,KAAKK,cAAc,kBAAkBG,iBAAiB,QAASR,KAAKG,aACpEH,KAAKK,cAAc,iBAAiBG,iBAAiB,UAAWR,KAAKI,mBACxE,4EA5BCL,GAAkBU,cA8BxBC,eAAeC,OAAO,aAAcZ,yTC7BpC,8hGAAAa,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAEA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBACzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACtDI,QADsD,SAC9CC,GACJA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC5D,IA0BL,QAxB+B,CACrBC,cADqB,SACPC,GAAI,oGACfA,EADe,iEAINP,EAJM,uCAIKQ,IAAIT,EAAmBQ,IAJ5B,4CAKvB,EAEKE,kBARqB,WAQD,iHACRT,EADQ,uCACGU,OAAOX,IADV,4CAEzB,EAEKY,qBAZqB,SAYAC,GAAY,oGAC7BA,EAAWC,eAAe,MADG,iEAIrBb,EAJqB,uCAIVc,IAAIf,EAAmBa,IAJb,4CAKtC,EAEKG,iBAnBqB,SAmBJR,GAAI,iHACTP,EADS,8CACSD,EAAmBQ,IAD5B,4CAE1B,6DCtBL,QANqB,CACjBS,KAAM,GAAF,OAAKnB,EAAAA,EAAAA,SAAL,SACJoB,kBAAmB,GAAF,OAAKpB,EAAAA,EAAAA,SAAL,cACjBqB,OAAQ,SAACX,GAAD,gBAAWV,EAAAA,EAAAA,SAAX,mBAAqCU,EAArC,sPCJZ,4wNAqBA,QApBMY,oMACF,sGAC2BC,MAAMC,EAAAA,MADjC,cACUC,EADV,gBAE8BA,EAASC,OAFvC,cAEUC,EAFV,yBAGWA,EAAYC,aAHvB,yIAMA,WAAkCC,GAAlC,yFAC2BN,MAAMC,EAAAA,kBAAiCK,GADlE,cACUJ,EADV,gBAE8BA,EAASC,OAFvC,cAEUC,EAFV,yBAGWA,EAAYC,aAHvB,wIAMA,WAAgClB,GAAhC,yFAC2Ba,MAAMC,EAAAA,OAAoBd,IADrD,cACUe,EADV,gBAE+BA,EAASC,OAFxC,cAEUI,EAFV,yBAGWA,EAAaf,YAHxB,yJAbEO,gDCON,QATe,CACXS,SAAU,sCACVC,eAAgB,8CAChBC,YAAY,IAAIC,MAAOC,cACvBpC,cAAe,mBACfE,iBAAkB,IAClBC,kBAAmB,6FCGjBkC,gBAAuBC,SAAS9C,cAAc,oBAC9C+C,EAAaD,SAAS9C,cAAc,cACpCgD,EAAWF,SAAS9C,cAAc,SAElCiD,EAAM,IAAIC,EAAAA,EAAI,CACnBC,eAAgBN,EAChBO,SAAUL,EACVM,YAAaL,IAGdM,OAAOnD,iBAAiB,cAAc,WAClC8C,EAAIM,YACL,IAEHD,OAAOnD,iBAAiB,QAAQ,WAC7B8C,EAAIM,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurant-apps/./src/scripts/components/search-bar.js","webpack://restaurant-apps/./src/scripts/data/favorite-restaurants-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurant-api-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["class SearchBar extends HTMLElement {\r\n    connectedCallback() {\r\n        this.render();\r\n    }\r\n\r\n    set clickEvent(event) {\r\n        this._clickEvent = event;\r\n        this.render();\r\n    }\r\n\r\n    set resetSearchColumn(event) {\r\n        this._resetSearchColumn = event;\r\n        this.render();\r\n    }\r\n\r\n    get value() {\r\n        return this.querySelector('#search-input').value;\r\n    }\r\n\r\n    render() {\r\n        this.innerHTML = `\r\n        <div class=\"search-column\">\r\n            <input type=\"text\" placeholder=\"Search Restaurants by name, category, or menu\" id=\"search-input\">\r\n            <button type=\"submit\" id=\"search-button\">Search</button>\r\n        </div> \r\n        `;\r\n        this.querySelector('#search-button').addEventListener('click', this._clickEvent);\r\n        this.querySelector('#search-input').addEventListener('keydown', this._resetSearchColumn);\r\n    }\r\n}\r\ncustomElements.define('search-bar', SearchBar);\r\n","import { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n    upgrade(database) {\r\n        database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n    },\r\n});\r\nconst FavoriteRestaurantsIdb = {\r\n    async getRestaurant(id) {\r\n        if (!id) {\r\n            return;\r\n        }\r\n        return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n    },\r\n\r\n    async getAllRestaurants() {\r\n        return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n    },\r\n\r\n    async updateDataRestaurant(restaurant) {\r\n        if (!(restaurant.hasOwnProperty('id'))) {\r\n            return;\r\n        }\r\n        return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n    },\r\n\r\n    async deleteRestaurant(id) {\r\n        return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n    },\r\n};\r\n\r\nexport default FavoriteRestaurantsIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n    HOME: `${CONFIG.BASE_URL}/list`,\r\n    SEARCH_RESTAURANT: `${CONFIG.BASE_URL}/search?q=`,\r\n    DETAIL: (id) => `${CONFIG.BASE_URL}/detail/${id}`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass RestaurantAPI {\r\n    static async homePage() {\r\n        const response = await fetch(API_ENDPOINT.HOME);\r\n        const responsJSON = await response.json();\r\n        return responsJSON.restaurants;\r\n    }\r\n\r\n    static async searchDataRestaurant(user_query) {\r\n        const response = await fetch(API_ENDPOINT.SEARCH_RESTAURANT + user_query);\r\n        const responsJSON = await response.json();\r\n        return responsJSON.restaurants;\r\n    }\r\n\r\n    static async detailOfRestaurant(id) {\r\n        const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n        const responseJSON = await response.json();\r\n        return responseJSON.restaurant;\r\n    }\r\n}\r\n\r\nexport default RestaurantAPI;\r\n","const CONFIG = {\r\n    BASE_URL: 'https://restaurant-api.dicoding.dev',\r\n    BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/',\r\n    CACHE_NAME: new Date().toISOString(),\r\n    DATABASE_NAME: 'Foodies-database',\r\n    DATABASE_VERSION: '1',\r\n    OBJECT_STORE_NAME: 'restaurants',\r\n};\r\n\r\nexport default CONFIG;\r\n","import 'regenerator-runtime'; /* for async await transpile */\nimport '../styles/main.scss';\nimport '../styles/responsive.scss';\nimport './components/search-bar';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\n\nconst moreNaviDrawerButton = document.querySelector('#more-navi-list');\nconst naviDrawer = document.querySelector('#navi-list');\nconst mainPage = document.querySelector('#main');\n\nconst app = new App({\n moreNaviButton: moreNaviDrawerButton,\n naviList: naviDrawer,\n mainContent: mainPage,\n});\n\nwindow.addEventListener('hashchange', () => {\n    app.renderPage();\n  });\n\nwindow.addEventListener('load', () => {\n   app.renderPage();\n   swRegister();\n});\n"],"names":["SearchBar","this","render","event","_clickEvent","_resetSearchColumn","querySelector","value","innerHTML","addEventListener","HTMLElement","customElements","define","i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","updateDataRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","HOME","SEARCH_RESTAURANT","DETAIL","RestaurantAPI","fetch","API_ENDPOINT","response","json","responsJSON","restaurants","user_query","responseJSON","BASE_URL","BASE_IMAGE_URL","CACHE_NAME","Date","toISOString","moreNaviDrawerButton","document","naviDrawer","mainPage","app","App","moreNaviButton","naviList","mainContent","window","renderPage","swRegister"],"sourceRoot":""}
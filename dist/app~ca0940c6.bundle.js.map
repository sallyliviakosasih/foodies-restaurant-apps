{"version":3,"file":"app~ca0940c6.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/views/app.js","webpack://restaurant-apps/./src/scripts/views/pages/detail-pages.js","webpack://restaurant-apps/./src/scripts/views/pages/favorites-page.js"],"sourcesContent":["import NaviListFunction from '../utils/navi-list-function';\r\nimport UrlParser from '../routes/url-parser';\r\nimport routes from '../routes/routes';\r\n\r\nclass App {\r\n    constructor({ moreNaviButton, naviList, mainContent }) {\r\n        this._moreNaviButton = moreNaviButton;\r\n        this._naviList = naviList;\r\n        this._mainContent = mainContent;\r\n\r\n        this._initialNaviAppShell();\r\n    }\r\n\r\n    _initialNaviAppShell() {\r\n        NaviListFunction.init({\r\n        moreNaviButton: this._moreNaviButton,\r\n        naviList: this._naviList,\r\n        mainContent: this._mainContent,\r\n        });\r\n    }\r\n\r\n    async renderPage() {\r\n        const windowsUrl = UrlParser.parsingActiveUrlWithCombiner();\r\n        const loadedPage = routes[windowsUrl];\r\n        this._mainContent.innerHTML = await loadedPage.render();\r\n        await loadedPage.afterRender();\r\n\r\n        const skip_element = document.querySelector('.skip-link');\r\n        skip_element.addEventListener('click', (event) => {\r\n            event.preventDefault();\r\n            document.querySelector('#main').focus(onfocus);\r\n        });\r\n    }\r\n}\r\nexport default App;\r\n","/* eslint-disable max-len */\r\nimport RestaurantAPI from '../../data/restaurant-api-source';\r\nimport UrlParser from '../../routes/url-parser';\r\nimport {\r\n  detailDataImageRestaurant,\r\n  detailDataDescriptionRestaurant,\r\n  detailDataReviewsOfRestaurant,\r\n  createFailToLoadData,\r\n} from '../templates/template-creator';\r\nimport LikeButtonFunction from '../../utils/like-button-function';\r\nimport AddCommentFunction from '../../utils/add-comment-function';\r\nimport FavoriteRestaurantsIdb from '../../data/favorite-restaurants-idb';\r\n\r\nconst Detail = {\r\n  async render() {\r\n    return `\r\n      <div class=\"loading\"></div>\r\n      <div class=\"detail-of-restaurant\" style=\"display:none\"></div>\r\n      <div id=\"likeButtonContainer\"></div>\r\n      `;\r\n  },\r\n  async afterRender() {\r\n    window.scrollTo(0, 0);\r\n    const detail_section = document.querySelector('.detail-of-restaurant');\r\n    const loading_container = document.querySelector('.loading');\r\n    const url = UrlParser.parsingActiveUrlWithoutCombiner();\r\n    try {\r\n      const raw_detail_restaurant = await RestaurantAPI.detailOfRestaurant(url.id);\r\n      loading_container.style.display = 'none';\r\n      detail_section.style.display = 'block';\r\n      detail_section.append(detailDataImageRestaurant(raw_detail_restaurant), detailDataDescriptionRestaurant(raw_detail_restaurant), detailDataReviewsOfRestaurant(raw_detail_restaurant));\r\n      LikeButtonFunction.init({\r\n        likeButtonContainer: document.querySelector('#likeButtonContainer'),\r\n        favoriteRestaurantdb: FavoriteRestaurantsIdb,\r\n        DataRestaurant: {\r\n          id: raw_detail_restaurant.id,\r\n          name: raw_detail_restaurant.name,\r\n          city: raw_detail_restaurant.city,\r\n          rating: raw_detail_restaurant.rating,\r\n          description: raw_detail_restaurant.description,\r\n          pictureId: raw_detail_restaurant.pictureId,\r\n        },\r\n      });\r\n\r\n      const add_comment_button = document.querySelector('.add_comment_button');\r\n      add_comment_button.addEventListener('click', async () => {\r\n        const user_name = document.querySelector('#add_user_name').value;\r\n        const reviews = document.querySelector('#add_user_reviews').value;\r\n        AddCommentFunction.init({\r\n          details_container: detail_section,\r\n          data_commment: {\r\n            id: url.id,\r\n            name: user_name,\r\n            review: reviews,\r\n          },\r\n        });\r\n      });\r\n    } catch (error) {\r\n      loading_container.style.display = 'none';\r\n      detail_section.style.display = 'block';\r\n      detail_section.innerHTML = createFailToLoadData;\r\n    }\r\n  },\r\n};\r\n\r\nexport default Detail;\r\n","import FavoriteRestaurantsIdb from '../../data/favorite-restaurants-idb';\r\nimport { dataCatalogueRestaurant, createFailToLoadData, createEmptyData } from '../templates/template-creator';\r\n\r\nconst Favorites = {\r\n    async render() {\r\n        return `\r\n        <section class=\"restaurant section\">\r\n          <h2 class=\"section-title\">Favorited Restaurants</h2>\r\n          <div class=\"restaurants catalogue\"></div>\r\n        </section>\r\n        `;\r\n      },\r\n      async afterRender() {\r\n        window.scrollTo(0, 0);\r\n        const restaurant_catalogue = document.querySelector('.restaurants');\r\n        try {\r\n          const raw_restaurants = await FavoriteRestaurantsIdb.getAllRestaurants();\r\n          if (raw_restaurants.length === 0) {\r\n            restaurant_catalogue.style.display = 'block';\r\n            restaurant_catalogue.innerHTML = createEmptyData;\r\n          } else {\r\n            raw_restaurants.forEach((restaurant) => {\r\n              restaurant_catalogue.innerHTML += dataCatalogueRestaurant(restaurant);\r\n            });\r\n          }\r\n        } catch (error) {\r\n            restaurant_catalogue.style.display = 'block';\r\n            restaurant_catalogue.style.backgroundColor = 'white';\r\n            restaurant_catalogue.innerHTML = '';\r\n            restaurant_catalogue.innerHTML = createFailToLoadData;\r\n        }\r\n    },\r\n};\r\n\r\nexport default Favorites;\r\n"],"names":["i","App","moreNaviButton","naviList","mainContent","this","_moreNaviButton","_naviList","_mainContent","_initialNaviAppShell","NaviListFunction","windowsUrl","UrlParser","loadedPage","routes","render","innerHTML","afterRender","document","querySelector","addEventListener","event","preventDefault","focus","onfocus","window","scrollTo","detail_section","loading_container","url","RestaurantAPI","id","raw_detail_restaurant","style","display","append","detailDataImageRestaurant","detailDataDescriptionRestaurant","detailDataReviewsOfRestaurant","LikeButtonFunction","likeButtonContainer","favoriteRestaurantdb","FavoriteRestaurantsIdb","DataRestaurant","name","city","rating","description","pictureId","user_name","value","reviews","AddCommentFunction","details_container","data_commment","review","createFailToLoadData","restaurant_catalogue","raw_restaurants","length","createEmptyData","forEach","restaurant","dataCatalogueRestaurant","backgroundColor"],"sourceRoot":""}